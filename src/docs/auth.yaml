components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          format: uuid
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        full_name:
          type: string
          description: Nombre completo
        email:
          type: string
          format: email
          description: Correo electrónico
        password:
          type: string
          description: Contraseña (hash)
        age:
          type: integer
          description: Edad del usuario
        cart:
          type: string
          format: uuid
          nullable: true
          description: ID del carrito asociado al usuario
        role:
          type: string
          enum: [user, admin, prem]
          description: Rol del usuario
        avatar:
          type: string
          format: uri
          description: URL del avatar del usuario
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      example:
        _id: "665a123e0c9ab30018dabcde"
        first_name: "Juan"
        last_name: "Pérez"
        full_name: "Juan Pérez"
        email: "juanperez@example.com"
        password: "$2a$10$9Qwzj..."
        age: 30
        cart: "665a123e0c9ab30018dc1234"
        role: "user"
        avatar: "https://via.placeholder.com/150"
        createdAt: "2024-06-10T10:00:00Z"
        updatedAt: "2024-06-10T11:00:00Z"
  responses:
    400:
      type: object
      properties:
        method: 
          description: Método con el cual se realizó la petición
          type: string
        url:
          description: ruta a la cual se realizó la petición
          type: string
        error:
          description: Mensaje de error
          type: string
      example:
        error: Invalid data
        method: post
        url: /api/auth/login
        
    401:
      type: object
      properties:
        method: 
          description: Método con el cual se realizó la petición
          type: string
        url:
          description: ruta a la cual se realizó la petición
          type: string
        error:
          description: Mensaje de error
          type: string
      example:
        error: Invalid credentials
        method: post
        url: /api/auth/login
        
    403:
      type: object
      properties:
        method: 
          description: Método con el cual se realizó la petición
          type: string
        url:
          description: ruta a la cual se realizó la petición
          type: string
        error:
          description: Mensaje de error
          type: string
      example:
        error: Forbidden
        method: post
        url: /api/auth/login
        
    500:
      type: object
      properties:
        method: 
          description: Método con el cual se realizó la petición
          type: string
        url:
          description: ruta a la cual se realizó la petición
          type: string
        error:
          description: Mensaje de error
          type: string
      example:
        error: Fatal error
        method: post
        url: /api/auth/login       
paths:
  /api/auth/login:
    post:
      summary: Iniciar sesión de usuario guardando token en una cookie
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              example:
                email: "juan.perez@example.com"
                password: "123"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  method: 
                    description: Método con el cual se realizó la petición
                    type: string
                  url:
                    description: ruta a la cual se realizó la petición
                    type: string
                  response:
                    description: Mensaje de respuesta
                    type: string
                example:
                  method: "POST"
                  url: "/api/auth/login"
                  response: "Logged in"
        400:
          description: Falta algun dato válido para el inicio de sesión
          content:
            application/json:
              schema:
                $ref: '#/components/responses/400'
        401:
          description: Credenciales incorrectas
          content:
            application/json:
              schema:
                $ref: '#/components/responses/401'
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/responses/500'
        403:
          description: Acceso denegado
          content:
            application/json:
              schema:
                $ref: '#/components/responses/403'
  /api/auth/logout:
    post:
      summary: Cierra la sesión del usuario
      tags:
        - Auth
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  method: 
                    description: Método con el cual se realizó la petición
                    type: string
                  url:
                    description: ruta a la cual se realizó la petición
                    type: string
                  response:
                    description: Mensaje de respuesta
                    type: string
                example:
                  method: "POST"
                  url: "/api/auth/logout"
                  response: "Logged out"
        500:
          description: Error interno del servidor
          content:
            application/json:
              schema:
                $ref: '#/components/responses/500'
  /api/auth/register:
    post:
      summary: Registra un nuevo usuario
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        500:
          $ref: '#/components/responses/500'